alias gits='git status'
alias gitall='git add -A'
alias gitcm='git commit -m'
alias gitchk='git checkout'

alias :q='echo idiot'
alias :q!='echo idiot'
alias :wq='echo idiot'

alias rg='ranger'

alias tbl='toolbox list'
alias tbs='toolbox start'
alias tbst='podman stop'
alias tbe='toolbox enter'
alias tbr='toolbox run -c'

alias pm='podman'

alias cdr='cd $HOME/repos'

docmd () {
	pandoc -f docx -t markdown "$1" -o "$1".md
}
mddoc () {
	pandoc -f markdown -t docx "$1" -o "$1".docx
}

gitpeek() {
    # if no arguments given or if the one argument is -h/--help, show the format
    if [ "$#" -eq 0 ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
        printf "%s\n" "Usage: gitpeek [account name] [repo name] [branch name] [filename]"
        return
    fi
    # if the file to be peeked is within a directory, replace $3 with the path
    # requires that the main branch be named main
    result="$(curl -s https://raw.githubusercontent.com/"$1"/"$2"/"$3"/"$4")"

    # if the repo is following the older naming scheme then the main branch will
    # be called master
    if [[ $(echo "$result" | grep "404") ]]; then
        result="$(curl -s https://raw.githubusercontent.com/"$1"/"$2"/master/"$3")"
        printf "%s\n" "$result"
        return 0
    else
        # prints the original result if there's no errors
        printf "%s\n" "$result"
        return 0
    fi
}
