#!/bin/bash

alias gits='git status'
alias gitall='git add -A'
alias gitcm='git commit -m'
alias gitchk='git checkout'

alias :q='echo idiot'
alias :q!='echo idiot'
alias :wq='echo idiot'

alias rg='ranger'

alias tbl='toolbox list'
alias tbs='toolbox start'
alias tbst='podman stop'
alias tbe='toolbox enter'
alias tbr='toolbox run -c'

alias pm='podman'

alias cdc='cd $HOME/.config'

lastupdate() {
	last_update="$(awk 'END{sub(/\[/,""); print $1}' /var/log/pacman.log | head -c 10)"
	printf "Last Update: %s\n" "$last_update"
}

docmd() {
	pandoc -f docx -t markdown "$1" -o "$1".md && vim "$1".md
}
mddoc() {
	pandoc -f markdown -t docx "$1" -o "$1".docx
}

cdr() {
	if [ "$#" -eq 0 ]; then
		cd "$HOME"/repos
		return 0
	else
		cd "$HOME"/repos/"$1"
		return 0
	fi
}

rmr() {
	if [ "$#" -eq 0 ]; then
		return 0
	elif [ "$#" -gt 1 ]; then
		return 0
	else
    while [ "$response" != "y" ] && [ "$response" != "n" ]; do
      printf "Recursively delete %s? y/n\n" $1
      read -n 1 response
    done
    if [ "$response" == "y" ]; then
      rm -r "$1"
      if [ "$?" ]; then
        printf "\n%s was deleted\n" $1
        response=""
        return 0
      else
        printf "\nError: %s was NOT deleted\n" $1
        return 1
      fi
    else
      printf "\n%s was NOT deleted\n" $1
      response=""
      return 0
    fi
	fi
}



gitpeek() {
    # if no arguments given or if the one argument is -h/--help, show the format
    if [ "$#" -eq 0 ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
        printf "%s\n" "Usage: gitpeek [account name] [repo name] [branch name] [filename]"
        return
    fi
    # if the file to be peeked is within a directory, replace $4 with the path
    result="$(curl -s https://raw.githubusercontent.com/"$1"/"$2"/"$3"/"$4")"

    printf "%s\n" "$result"
    return 0
}
